void
DrawFrameBuffer(SDL_Renderer * sdl_renderer)
{
	renderer_t * _renderer = render_ctx->renderer;
	unsigned int bi=0, samplestart;
	int i, j, cj, imgW = _renderer->imgWidth, 
				  imgH = _renderer->imgHeight;
	const int us = _renderer->used_samples, bw = _renderer->bufWidth;
	cRGB_t fc;
	cRGB_t * fb = _renderer->frameBuffer;
	cRGB_t * c = fb;

	for (j = imgH; j--; )
    {
	  bi = j * bw;
	  for (i = imgW; i--; )
	  {
		fc.r = 0.f, fc.g = 0.f, fc.b = 0.f;
		samplestart = bi + (i*us);
		switch (us) {
			case 16:
				c = fb + samplestart + 15;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 15:
				c = fb + samplestart + 14;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 14:
				c = fb + samplestart + 13;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 13:
				c = fb + samplestart + 12;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 12:
				c = fb + samplestart + 11;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 11:
				c = fb + samplestart + 10;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 10:
				c = fb + samplestart + 9;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 9:
				c = fb + samplestart + 8;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 8:
				c = fb + samplestart + 7;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 7:
				c = fb + samplestart + 6;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 6:
				c = fb + samplestart + 5;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 5:
				c = fb + samplestart + 4;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 4:
				c = fb + samplestart + 3;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 3:
			    c = fb + samplestart + 2;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 2:
				c = fb + samplestart + 1;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
			case 1:
				c = fb + samplestart;
				fc.r += c->r; fc.g += c->g; fc.b += c->b;
				break;
		}
		
		SDL_SetRenderDrawColor(sdl_renderer, (unsigned char)(fc.r * 255.f), 
										 (unsigned char)(fc.g * 255.f), 
										 (unsigned char)(fc.b * 255.f), 
										 0xFF);
		SDL_RenderDrawPoint(sdl_renderer, i, j);
	  }
    }
}